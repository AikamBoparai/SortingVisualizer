[{"C:\\Code\\SortingVisualizer\\src\\index.js":"1","C:\\Code\\SortingVisualizer\\src\\reportWebVitals.js":"2","C:\\Code\\SortingVisualizer\\src\\App.js":"3","C:\\Code\\SortingVisualizer\\src\\SortingVisualizer\\SortingVisualizer.jsx":"4","C:\\Code\\SortingVisualizer\\src\\SortingAlgorithms\\sortingAlgorithms.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":247,"mtime":1610340556771,"results":"9","hashOfConfig":"7"},{"size":2995,"mtime":1610527345151,"results":"10","hashOfConfig":"7"},{"size":2173,"mtime":1610527156492,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"lgawo7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Code\\SortingVisualizer\\src\\index.js",[],["24","25"],"C:\\Code\\SortingVisualizer\\src\\reportWebVitals.js",[],"C:\\Code\\SortingVisualizer\\src\\App.js",[],"C:\\Code\\SortingVisualizer\\src\\SortingVisualizer\\SortingVisualizer.jsx",[],"C:\\Code\\SortingVisualizer\\src\\SortingAlgorithms\\sortingAlgorithms.js",["26","27"],"export function getMergeSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    const helper = array.slice();\r\n    mergeSort(array,helper,0,array.length-1,animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSort(array,helper,start,end,animations){\r\n    if(start < end){\r\n        const middle = Math.floor((start+end)/2);\r\n        mergeSort(helper,array,start,middle,animations);\r\n        mergeSort(helper,array,middle+1,end,animations);\r\n        merge(array,helper,start,middle,end,animations);\r\n    }\r\n    else{\r\n        return;\r\n    }\r\n}\r\n\r\nfunction merge(array,helper,start,middle,end,animations){\r\n    \r\n    let current = start;\r\n    let helperLeft = start;\r\n    let helperRight = middle + 1;\r\n    while (helperLeft <= middle && helperRight <= end) {\r\n        animations.push([helperLeft, helperRight]);\r\n        animations.push([helperLeft, helperRight]);\r\n        if (helper[helperLeft] <= helper[helperRight]) {\r\n        animations.push([current, helper[helperLeft]]);\r\n        array[current++] = helper[helperLeft++];\r\n        } else {\r\n        animations.push([current, helper[helperRight]]);\r\n        array[current++] = helper[helperRight++];\r\n        }\r\n    }\r\n    while (helperLeft <= middle) {\r\n        animations.push([helperLeft, helperLeft]);\r\n        animations.push([helperLeft, helperLeft]);\r\n        animations.push([current, helper[helperLeft]]);\r\n        array[current++] = helper[helperLeft++];\r\n    }\r\n    while (helperRight <= end) {\r\n        animations.push([helperRight, helperRight]);\r\n        animations.push([helperRight, helperRight]);\r\n        animations.push([current, helper[helperRight]]);\r\n        array[current++] = helper[helperRight++];\r\n    }\r\n}\r\n\r\nexport function getBubbleSortAnimations(array){\r\n    const animations = [];\r\n    let numSwaps;\r\n    do{\r\n        numSwaps = 0;\r\n        for(let i = 0; i < array.length -1; i++){\r\n            if(array[i] > array[i+1]){\r\n                let temp = array[i+1];\r\n                array[i+1] = array[i];\r\n                array[i] = temp;\r\n                numSwaps++;\r\n            }\r\n        }\r\n    }while(numSwaps != 0);\r\n\r\n    return array;\r\n}",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":52,"column":11,"nodeType":"34","messageId":"35","endLine":52,"endColumn":21},{"ruleId":"36","severity":1,"message":"37","line":64,"column":21,"nodeType":"38","messageId":"39","endLine":64,"endColumn":23},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'animations' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]